<<<<<<< HEAD
------------------
2019/11/11 天晴 普通的一天

重读第七章类前两节
1.成员函数的声明必须在类的内部，它的定义既可以在类的内部也可以在类的外部；
作为接口的非成员函数，定义和声明都在类的外部（貌似友元函数的声明在内部）。
2.this总是指向相对应的对象，是一个常量指针。
3.首先编译声明，然后编译成员函数。
4.IO类型不能被拷贝，所以当作参数时，我们通过引用来传递他们。
5.构造函数的名字与类目相同，且没有返回类型，不能声明成const。
6.对于一个const对象，构造函数完成初始化过程后，对象才能真正获得常量属性，所以，构造函数在const对象的构造过程中，可以向其写值。
7.struct和class的唯一区别：默认的访问权限不一样。 编程习惯：希望定义的类的所有成员是public时，用struct。


-------------------
2019//11/13 天晴 很冷的一天
c++好难呀，看的脑袋好晕啊。。

--------------------
=======
------------------
2019/11/11 天晴 普通的一天

重读第七章类前两节
1.成员函数的声明必须在类的内部，它的定义既可以在类的内部也可以在类的外部；
作为接口的非成员函数，定义和声明都在类的外部（貌似友元函数的声明在内部）。
2.this总是指向相对应的对象，是一个常量指针。
3.首先编译声明，然后编译成员函数。
4.IO类型不能被拷贝，所以当作参数时，我们通过引用来传递他们。
5.构造函数的名字与类目相同，且没有返回类型，不能声明成const。
6.对于一个const对象，构造函数完成初始化过程后，对象才能真正获得常量属性，所以，构造函数在const对象的构造过程中，可以向其写值。
7.struct和class的唯一区别：默认的访问权限不一样。 编程习惯：希望定义的类的所有成员是public时，用struct。


-------------------
2019//11/13 天晴 很冷的一天
c++好难呀，看的脑袋好晕啊。。

--------------------
>>>>>>> 639ff8d95a9fe74af54e79615c03d2fa61b773a1
